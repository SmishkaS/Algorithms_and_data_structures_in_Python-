#  Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
#  заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
# Примечания:
# ● алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
# ● постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
# Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.

# Для того чтобы улучшить сортировку написанную на лекции разберемся что в ней
"""
array = [4, 5, 9, 6, 3, 2, 7, 8, 0, 1]

n = 1
while n < len(array):  # Цыкл будет выполняться пока n не станет >= длине нашего массива
    for i in range(len(array) - 1):  # Для значения i в списке (за вычетом единицы от длины списка)
        if array[i] > array[i + 1]:  # Если значение в списке > значения которое справа
            array[i], array[i + 1] = array[i + 1], array[i]  # То поменяй местами эти значения
    n += 1
    print(array)

print(array)

# Проблема в том что для сортировки ряда из 10 значений потребуется 90 итераций (10*9)
# а если у нас 100 значений то (100*99) 9900 итераций.
"""

# Мой вариант
# для выполнения условия добавим генетатор

import random

array = [random.randint(-100, 100) for _ in range(10)]
print(array)
# array = [4, 5, 9, 6, 3, 2, 7, 8, 0, 1]

# Уменьшим длину списка т.к. понятно что самое минимально значение будет справа.
for i in range(len(array)-1):
    for j in range(len(array)-1 - i):
        if array[j] < array[j + 1]:
            array[j], array[j + 1] = array[j + 1], array[j]
    # print(array)

print(array)
# Вывод: Сократили колличество итераций в 2 раза.
